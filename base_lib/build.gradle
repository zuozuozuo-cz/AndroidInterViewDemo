plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    id("kotlin-kapt")
    id("androidx.navigation.safeargs.kotlin") version "2.8.2"
}

android {
    namespace 'com.example.base_lib'
    compileSdk 35

    defaultConfig {
        minSdk 24

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
}

dependencies {

    // ===== 基础 AndroidX =====
    api(libs.androidx.core.ktx)
    api(libs.androidx.appcompat)
    api(libs.material)

    // Lifecycle
    api(libs.lifecycle.runtime.ktx)
    api(libs.lifecycle.viewmodel.ktx)
    api(libs.lifecycle.livedata.ktx)

    // Navigation
    api(libs.navigation.fragment.ktx)
    api(libs.navigation.ui.ktx)

    // Room（示例：只提供接口）
    compileOnly(libs.room.runtime)
    compileOnly(libs.room.ktx)
    kapt(libs.room.compiler)

    // 网络
    api(libs.retrofit)
    api(libs.retrofit.converter.gson)
    api(libs.okhttp)
    api(libs.okhttp.logging)

    // Glide
    api(libs.glide)
    kapt(libs.glide.compiler)

    // Arouter
    api(libs.arouter.api)
    kapt(libs.arouter.compiler)

    // UI
    api(libs.baserecyclerviewadapterhelper)
    api(libs.fragment.ktx)
}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.name)
    }
}